From 0c62ee9950eec40dab30fd4271a3368fb03f5606 Mon Sep 17 00:00:00 2001
From: afl1 <afl2001@gmail.com>
Date: Mon, 11 Mar 2019 19:38:47 +0100
Subject: [PATCH] VideoPlayer: SD channels assume 16:9

Assume 16:9 aspect ratio for SD at playback start.
Real aspec ratio will be fix later from stream.

Patch: kodi-le-037-SD-channels-assume-16-9.patch
---
 .../DVDCodecs/Video/DVDVideoCodecAmlogic.cpp          | 11 +++++++++--
 xbmc/utils/BitstreamConverter.cpp                     |  7 ++++++-
 2 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp
index 0a5a0de2b9e..85007e93547 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp
@@ -130,6 +130,12 @@ bool CDVDVideoCodecAmlogic::Open(CDVDStreamInfo &hints, CDVDCodecOptions &option
     case AV_CODEC_ID_MPEG2VIDEO:
       if (m_hints.width <= CServiceBroker::GetSettingsComponent()->GetSettings()->GetInt(CSettings::SETTING_VIDEOPLAYER_USEAMCODECMPEG2))
         goto FAIL;
+
+      // if we have SD PAL content assume it is widescreen
+      // correct aspect ratio will be detected later anyway
+      if ((m_hints.width == 720 || m_hints.width == 544 || m_hints.width == 480) && m_hints.height == 576 && m_hints.aspect == 0.0f)
+          m_hints.aspect = 16.0 / 9.0;
+
       m_mpeg2_sequence_pts = 0;
       m_mpeg2_sequence = new mpeg2_sequence;
       m_mpeg2_sequence->width  = m_hints.width;
@@ -194,12 +200,12 @@ bool CDVDVideoCodecAmlogic::Open(CDVDStreamInfo &hints, CDVDCodecOptions &option
       // if we have SD PAL content assume it is widescreen
       // correct aspect ratio will be detected later anyway
       if (m_hints.width == 720 && m_hints.height == 576 && m_hints.aspect == 0.0f)
-          m_hints.aspect = 1.8181818181818181;
+          m_hints.aspect = 16.0 / 9.0;
 
       // assume widescreen for "HD Lite" channels
       // correct aspect ratio will be detected later anyway
       if ((m_hints.width == 1440 || m_hints.width ==1280) && m_hints.height == 1080 && m_hints.aspect == 0.0f)
-          m_hints.aspect = 1.7777777777777778;
+          m_hints.aspect = 16.0 / 9.0;;
 
       break;
     case AV_CODEC_ID_MPEG4:
@@ -481,6 +487,7 @@ void CDVDVideoCodecAmlogic::FrameRateTracking(uint8_t *pData, int iSize, double
 
       m_processInfo.SetVideoFps(m_framerate);
       m_processInfo.SetVideoDAR(m_hints.aspect);
+      m_processInfo.SetVideoDAR(m_h264_sequence->ratio);
     }
     return;
   }
diff --git a/xbmc/utils/BitstreamConverter.cpp b/xbmc/utils/BitstreamConverter.cpp
index a9efd4b7f60..2a3ba3c2e5b 100644
--- a/xbmc/utils/BitstreamConverter.cpp
+++ b/xbmc/utils/BitstreamConverter.cpp
@@ -1464,7 +1464,7 @@ bool CBitstreamConverter::h264_sequence_header(const uint8_t *data, const uint32
                     break;
                 case 4:
                     // 16:11
-                    ratio *= 1.4545454545454546;
+                    ratio *= 1.4222222222222222;
                     break;
                 case 5:
                     // 40:33
@@ -1528,6 +1528,11 @@ bool CBitstreamConverter::h264_sequence_header(const uint8_t *data, const uint32
                 sequence->ratio = ratio;
                 sequence->ratio_info = aspect_ratio_idc;
             }
+            if (changed)
+            {
+              CLog::Log(LOGDEBUG, "CBitstreamConverter::h264_sequence_header: "
+                "width(%d), height(%d), ratio(%f), %dx%d", pic_width_cropped, pic_height_cropped, ratio, sar_width, sar_height);
+            }
 
             break;
         } // SPS
